{
  "collection": {
    "_": {
      "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
      "exporter_id": "16701660",
      "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
    },
    "item": [
      {
        "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
        "name": "course list",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "course",
              "list",
              ""
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
              "type": "text/javascript",
              "exec": [
                "var getResults = function() {",
                "    var jsonData = pm.response.json();",
                "    console.log(jsonData)",
                "    return jsonData['results'];",
                "};",
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Test data type of response\", function () {",
                "      var jsonData = pm.response.json();",
                "        pm.expect(jsonData[0].id).to.eql(1);",
                "});"
              ],
              "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
            }
          }
        ]
      },
      {
        "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
        "name": "course get",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "course",
              "detail",
              "1"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
              "type": "text/javascript",
              "exec": [
                "var getResults = function () {",
                "    var jsonData = pm.response.json();",
                "    return jsonData;",
                "};",
                "",
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "})",
                "",
                "pm.test(\"Test data type of response\", function () {",
                "      var jsonData = pm.response.json();",
                "        pm.expect(jsonData.id).to.eql(3);",
                "});"
              ],
              "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
      "name": "api-checker",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "dd900909-bf99-4883-b89d-a5a810e432b1",
    "values": []
  },
  "globals": {
    "id": "06a0bd95-6b14-4a36-b76e-4e6be8f41d1f",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 2,
        "pending": 0,
        "failed": 2
      },
      "tests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 4,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700196535493,
      "completed": 1700196535584
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c4e1731-3b49-4965-91e7-6ec880bbdec0",
          "httpRequestId": "da0f7e56-c97b-46aa-9131-5d9f024af59d"
        },
        "item": {
          "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
          "name": "course list",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "list",
                ""
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function() {",
                  "    var jsonData = pm.response.json();",
                  "    console.log(jsonData)",
                  "    return jsonData['results'];",
                  "};",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData[0].id).to.eql(1);",
                  "});"
                ],
                "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "course",
              "list",
              ""
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b23bc768-b6aa-4505-906c-b25c4c70116b",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Test data type of response",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Test data type of response",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "22008d52-a44d-41e2-b37f-01e99b6c630d",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7f96e2cb-543f-4cce-a034-ccf513122a22"
        },
        "item": {
          "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
          "name": "course get",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "detail",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function () {",
                  "    var jsonData = pm.response.json();",
                  "    return jsonData;",
                  "};",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "})",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.id).to.eql(3);",
                  "});"
                ],
                "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "course",
              "detail",
              "1"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5efbca71-25c1-4ad7-8455-6db4ec5bc96f",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Test data type of response",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Test data type of response",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)",
          "checksum": "19d0490898356dac415db0a8993acaa4",
          "id": "bcfb302e-29ab-4adf-b590-e148b8b298c8",
          "timestamp": 1700196535537,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1595,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
          "name": "course list",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "list",
                ""
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function() {",
                  "    var jsonData = pm.response.json();",
                  "    console.log(jsonData)",
                  "    return jsonData['results'];",
                  "};",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData[0].id).to.eql(1);",
                  "});"
                ],
                "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c4e1731-3b49-4965-91e7-6ec880bbdec0",
          "httpRequestId": "da0f7e56-c97b-46aa-9131-5d9f024af59d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "8f1a38fbb4708623aafe992d2647a097",
          "id": "19df76a9-8e0f-4cc6-851d-ac4b506c6e96",
          "timestamp": 1700196535555,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
          "name": "course list",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "list",
                ""
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function() {",
                  "    var jsonData = pm.response.json();",
                  "    console.log(jsonData)",
                  "    return jsonData['results'];",
                  "};",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData[0].id).to.eql(1);",
                  "});"
                ],
                "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c4e1731-3b49-4965-91e7-6ec880bbdec0",
          "httpRequestId": "da0f7e56-c97b-46aa-9131-5d9f024af59d",
          "scriptId": "e00d0e63-2a22-442c-94a9-3488f926f69f",
          "execution": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Test data type of response",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "f830888134aecceb0c4cdf6628359a95",
          "id": "ec063de1-666b-43c0-b290-cb7b6dc9b7df",
          "timestamp": 1700196535556,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
          "name": "course list",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "list",
                ""
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function() {",
                  "    var jsonData = pm.response.json();",
                  "    console.log(jsonData)",
                  "    return jsonData['results'];",
                  "};",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData[0].id).to.eql(1);",
                  "});"
                ],
                "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c4e1731-3b49-4965-91e7-6ec880bbdec0",
          "httpRequestId": "da0f7e56-c97b-46aa-9131-5d9f024af59d",
          "scriptId": "e00d0e63-2a22-442c-94a9-3488f926f69f",
          "execution": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 8000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:8000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:8000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)",
          "checksum": "19d0490898356dac415db0a8993acaa4",
          "id": "636a9513-3657-413a-bf1b-0470f116f15b",
          "timestamp": 1700196535575,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1595,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
          "name": "course get",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "detail",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function () {",
                  "    var jsonData = pm.response.json();",
                  "    return jsonData;",
                  "};",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "})",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.id).to.eql(3);",
                  "});"
                ],
                "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22008d52-a44d-41e2-b37f-01e99b6c630d",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7f96e2cb-543f-4cce-a034-ccf513122a22"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "169020131664477cec85b1c00a6464f6",
          "id": "378d4b79-6818-495a-8467-8b718ad99252",
          "timestamp": 1700196535580,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
          "name": "course get",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "detail",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function () {",
                  "    var jsonData = pm.response.json();",
                  "    return jsonData;",
                  "};",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "})",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.id).to.eql(3);",
                  "});"
                ],
                "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22008d52-a44d-41e2-b37f-01e99b6c630d",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7f96e2cb-543f-4cce-a034-ccf513122a22",
          "scriptId": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
          "execution": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Test data type of response",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "bdae31fc95787b454e920947114cc13b",
          "id": "d7bc85e6-3ef9-4087-b472-341939ecf492",
          "timestamp": 1700196535580,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
          "name": "course get",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "course",
                "detail",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                "type": "text/javascript",
                "exec": [
                  "var getResults = function () {",
                  "    var jsonData = pm.response.json();",
                  "    return jsonData;",
                  "};",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "})",
                  "",
                  "pm.test(\"Test data type of response\", function () {",
                  "      var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.id).to.eql(3);",
                  "});"
                ],
                "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "exporter_id": "16701660",
            "collection_link": "https://grey-station-258050.postman.co/workspace/My-API~43aad951-4bde-433a-a1b1-88d16a41a31b/collection/16701660-18c0f4fe-5017-4290-a479-0aa7cac0d623?action=share&source=collection_link&creator=16701660"
          },
          "item": [
            {
              "id": "bc6ff3d6-3bb9-4947-9cfa-9fd063e41a60",
              "name": "course list",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "list",
                    ""
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e00d0e63-2a22-442c-94a9-3488f926f69f",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function() {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData)",
                      "    return jsonData['results'];",
                      "};",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData[0].id).to.eql(1);",
                      "});"
                    ],
                    "_lastExecutionId": "e58343c5-8f98-4f97-88e9-3c543e3edd33"
                  }
                }
              ]
            },
            {
              "id": "286b3f93-653d-4594-a0a9-cc4f93e72d01",
              "name": "course get",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "course",
                    "detail",
                    "1"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
                    "type": "text/javascript",
                    "exec": [
                      "var getResults = function () {",
                      "    var jsonData = pm.response.json();",
                      "    return jsonData;",
                      "};",
                      "",
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "})",
                      "",
                      "pm.test(\"Test data type of response\", function () {",
                      "      var jsonData = pm.response.json();",
                      "        pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "_lastExecutionId": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "18c0f4fe-5017-4290-a479-0aa7cac0d623",
            "name": "api-checker",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22008d52-a44d-41e2-b37f-01e99b6c630d",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7f96e2cb-543f-4cce-a034-ccf513122a22",
          "scriptId": "47df80ae-7e40-48d9-b2ac-33d5f41ed5bf",
          "execution": "e6ff2c45-c8e7-4af0-8ee7-82f3ee6851f4"
        }
      }
    ],
    "error": null
  }
}